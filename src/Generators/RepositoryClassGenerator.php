<?php

namespace LaraSpell\Generators;

use LaraSpell\Schema\Table;

class RepositoryClassGenerator extends ClassGenerator
{

    protected $tableSchema;

    public function __construct(Table $tableSchema)
    {
        parent::__construct($tableSchema->getRepositoryClass());
        $this->tableSchema = $tableSchema;
        $this->initClass();
        $this->addMethodsFromReflection();
    }

    protected function initClass()
    {
        $schema = $this->tableSchema;
        $table = $schema->getName();
        $fillables = $schema->getFillableColumns();
        $searchables = array_values(array_map(function($field) {
            return $field->getColumnName();
        }, $schema->getSearchableFields()));
        $this->useClass($schema->getModelClass());
        $this->useClass($schema->getRepositoryInterface(), $schema->getRepositoryInterface(false).'Interface');
        $this->setParentClass('BaseRepository');
        $this->addProperty('searchables', 'array', 'protected', $searchables, 'Searchable columns');
        $this->addImplement($schema->getRepositoryInterface(false).'Interface');
        $this->setDocblock(function($docblock) use ($schema) {
            $authorName = $schema->getRootSchema()->getAuthorName();
            $authorEmail = $schema->getRootSchema()->getAuthorEmail();
            $docblock->addText("Generated by LaraSpell");
            $docblock->addAnnotation("author", "{$authorName} <{$authorEmail}>");
            $docblock->addAnnotation("created", date('r'));
        });
    }

    protected function methodGetModel(MethodGenerator $method)
    {
        $modelClass = $this->tableSchema->getModelClass(false);
        $method->setDocblock(function($docblock) {
            $docblock->addText("Get model class name");
            $docblock->setReturn("string");
        });
        $method->setCode(function($code) use ($modelClass) {
            $code->addStatements('return '.$modelClass.'::class;');
        });
    }

}
